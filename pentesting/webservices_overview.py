# Description
# Creates an html output file with all the webservice methods in a table, joined with the description. Only outputs services that you are authorized for

# Parameters
# Parameter 1: Input file with webservices
# Parameter 2: The session cookie

# Additional
# Replace [Host] with the host
# Replace [Cookie_Name] with the session cookie's name

import requests, sys, re

input_file = sys.argv[1]
cookie = sys.argv[2]
baseUrl = 'https://[Host]/Services/'

with open(input_file , 'r') as f:
    data = f.read()
urls = re.findall(r'([^ ]*?\.asmx)', data)

print '''
 <!-- Latest compiled and minified CSS -->
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css">

<!-- jQuery library -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>

<!-- Popper JS -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.0/umd/popper.min.js"></script>

<!-- Latest compiled JavaScript -->
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.1.0/js/bootstrap.min.js"></script>

<script>
$(document).ready(function(){
    $("a").on("click", function(){
        $(this).css("color", "#efefef");
    });
    
    $("a").each(function(){
        $(this).parent().prepend('<div class="checkbox" style="float: left; margin-top: 5px; margin-right: 5px;"><input class="checkbox" type="checkbox" value=""></div>');
    })
    
    $(".checkbox").on("click", function(){
        $(this).parent().parent().toggleClass("green");
    });
});
</script>

<style>
.green {
    background-color: #a8ffa8;
}
</style>
      '''

print "<div class='container'><table class='table table-bordered table-bordered'>"

for url in urls:
    response = requests.get(baseUrl + url, cookies = {"[Cookie_Name]" : cookie})
    if response.status_code == 200:
        print '<tr style="background-color: grey;"> <td>{0}</td><td></td></tr>'.format(url)
        methods = re.findall(r'<a href=\"([^\"]*?)\"', response.content)
        for method in methods:
            if "?op=" in method:
                m = requests.get(baseUrl + method, cookies = {"[Cookie_Name]" : cookie})
                if m.status_code == 200:
                    description = re.findall(r'<p class=\"intro\">([^<]*?)<\/p>', m.content)[0]
                    print "<tr><td><a href='{0}'".format(baseUrl + url + "/" + str(method.split("=")[1])) + ">" + str(method.split("=")[1]) + "</a></td>"
                    print "<td>" + str(description) + "</td></tr>"


print "</table></div>"
