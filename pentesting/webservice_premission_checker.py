# Description
# Checks if a user, from a list of users, is authorized to a specefic webservice/method

# Parameters
# Parameter 1: List with usernames and passwords divided by ':'

# Additional
# Replace [Host] with the host
# Replace [Webservice] with the webservice name
# Replace [Method] with the webservice method name

import sys
import requests
import hashlib
import json
from collections import namedtuple
from os import system
import re
from multiprocessing.dummy import Pool

def login(loginID, password, getCookie = False):
    #get challenge
    try:
        r = requests.get('https://[Host]/Services/Security.asmx/InitializeLogin?loginid=%s' % loginID)
    except:
        return login(loginID, password, getCookie)
    s = r.content
    s = s[s.index('{'):s.index('}') + 1]
    x = json.loads(s, object_hook=lambda d: namedtuple('X', d.keys())(*d.values()))
    
    #hash password with challenge
    hash_dig = password
    try:
        for i in range(0, x.iterations):
            hash_dig = hashlib.sha256(hash_dig + x.salt + password).hexdigest()
        hash_dig = hashlib.sha256(hash_dig + x.challenge).hexdigest()
    except:
        print "[!] Error on loginID",loginID
        return False
    
    try:
        login = requests.get('https://[Host]/Services/Security.asmx/Login?response=%s' % hash_dig, cookies=r.cookies)
    except:
        return login(loginID, password, getCookie)

    if getCookie:
        return r.cookies
    return "true" in login.content

userList = sys.argv[1]

with open(userList) as f:
    lines = f.readlines()

for line in lines:
    username, password = line.split(" : ")
    cookie = login(username, password, True)
    try:
        switchSession = requests.get('https://[Host]/Services/[Webservice][Method]', cookies=cookie)
        if switchSession.status_code == 200:
            print username, password
    except:
        if switchSession.status_code == 200:
            print username, password
